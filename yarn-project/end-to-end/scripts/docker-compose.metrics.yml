# OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: ${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:-http://otel-collector:4318/v1/metrics}
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:-http://otel-collector:4318/v1/traces}

# A docker-compose to run with an end-to-end to collect metrics
# If testing metrics collection, run this compose file along side your end to end test
# name: end-to-end-metrics
services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    pull_policy: always
    configs:
      - source: otel-collector-config
        target: /etc/otelcol-contrib/config.yaml
    ports:
      - 4318:4318

  prometheus:
    image: prom/prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml

  grafana:
    pull_policy: always
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./spartan/aztec-network/files/grafana_dashboards:/etc/grafana/provisioning/dashboards
      - grafana:/var/lib/grafana
    configs:
      - source: grafana-sources
        target: /etc/grafana/provisioning/datasources/default.yml

  jaeger:
    pull_policy: always
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686

volumes:
  grafana:

configs:
  grafana-sources:
    content: |
      apiVersion: 1
      datasources:
        - name: Prometheus
          uid: aztec-node-metrics
          type: prometheus
          url: http://prometheus:9090
          editable: false
          isDefault: true
          jsonData:
            timeInterval: 10s

  prometheus-config:
    content: |
      global:
        evaluation_interval: 15s
        scrape_interval: 15s
      scrape_configs:
        - job_name: otel-collector
          static_configs:
          - targets: ['otel-collector:8888']
        - job_name: aztec
          static_configs:
          - targets: ['otel-collector:8889']
  otel-collector-config:
    content: |
      receivers:
        otlp:
          protocols:
            http:
              endpoint: 0.0.0.0:4318

      processors:
        batch:

      exporters:
        prometheus:
          endpoint: 0.0.0.0:8889
          metric_expiration: 5m
        otlp/jaeger:
            endpoint: "jaeger:4317"
            tls:
              insecure: true

      service:
        pipelines:
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [otlp/jaeger]
          metrics:
            receivers: [otlp]
            processors: [batch]
            exporters: [prometheus]

