VERSION 0.8

build:
    FROM ../+bootstrap
    WORKDIR /usr/src/yarn-project

cli-base:
    FROM +build
    # Remove a bunch of stuff that we don't need that takes up space.
    RUN rm -rf \
        ../noir-projects \
        ../l1-contracts \
        ../barretenberg/ts/src \
        ../barretenberg/ts/dest/node-cjs \
        ../barretenberg/ts/dest/browser

bb-cli:
    FROM +cli-base

    ENV BB_WORKING_DIRECTORY=/usr/src/bb
    ENV BB_BINARY_PATH=/usr/src/barretenberg/cpp/build/bin/bb
    ENV ACVM_WORKING_DIRECTORY=/usr/src/acvm
    ENV ACVM_BINARY_PATH=/usr/src/noir/noir-repo/target/release/acvm

    RUN mkdir -p $BB_WORKING_DIRECTORY $ACVM_WORKING_DIRECTORY

    RUN yarn workspaces focus @aztec/bb-prover --production && yarn cache clean
    RUN rm -rf \
        aztec.js/dest/main.js \
        end-to-end \
        **/src

    # yarn symlinks the binary to node_modules/.bin
    ENTRYPOINT ["/usr/src/yarn-project/node_modules/.bin/bb-cli"]

txe:
    FROM +cli-base
    RUN yarn workspaces focus @aztec/txe && yarn cache clean
    ENTRYPOINT ["node", "--no-warnings", "/usr/src/yarn-project/txe/dest/bin/index.js"]
    SAVE ARTIFACT /usr/src /usr/src

cli-wallet-build:
    FROM +cli-base
    RUN yarn workspaces focus @aztec/cli-wallet --production && yarn cache clean
    SAVE ARTIFACT /usr/src /usr/src

cli-wallet:
    FROM ubuntu:noble
    RUN apt update && apt install nodejs curl socat -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    COPY +cli-wallet-build/usr/src /usr/src
    ENTRYPOINT ["/usr/src/yarn-project/cli-wallet/wallet-entrypoint.sh"]

# TODO(ci3) move to bootstrap.sh
export-cli-wallet:
    FROM +cli-wallet
    ARG DIST_TAG="latest"
    ARG ARCH
    SAVE IMAGE --push aztecprotocol/cli-wallet:${DIST_TAG}${ARCH:+-$ARCH}

anvil:
    FROM ../build-images+from-registry
    SAVE ARTIFACT /opt/foundry/bin/anvil

scripts-prod:
    FROM +build
    RUN yarn workspaces focus @aztec/scripts --production && yarn cache clean
    SAVE ARTIFACT /usr/src /usr/src

all:
    BUILD +aztec
    BUILD +end-to-end

format-check:
    FROM +build
    RUN yarn formatting

test:
    FROM +build
    RUN yarn test
    # TODO move into build image
    ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    RUN cd ivc-integration && npx playwright install && npx playwright install-deps

run-e2e:
    ARG test
    ARG debug=""
    FROM +end-to-end
    RUN DEBUG=$debug yarn test $test

prover-client-test:
    FROM +build
    ARG test
    ARG debug=""
    RUN cd prover-client && DEBUG=$debug yarn test $test

publish-npm:
    FROM +build
    ARG DIST_TAG="latest"
    ARG VERSION
    ARG DRY_RUN=0
    WORKDIR /usr/src/yarn-project
    RUN --secret NPM_TOKEN ./publish_npm.sh $DIST_TAG $VERSION $DRY_RUN
