name: CI
on:
  push:
    branches: [master, provernet]
  pull_request:
    branches-ignore: [devnet]
  workflow_dispatch:
    inputs: {}

concurrency:
  # force parallelism in master
  group: ci-${{ github.ref_name == 'master' && github.run_id || github.ref_name }}
  cancel-in-progress: true

env:
  DOCKERHUB_PASSWORD: "${{ secrets.DOCKERHUB_PASSWORD }}"
  RUN_ID: ${{ github.run_id }}
  RUN_ATTEMPT: ${{ github.run_attempt }}
  USERNAME: ${{ github.event.pull_request.user.login || github.actor }}
  GITHUB_TOKEN: ${{ github.token }}
  GH_SELF_HOSTED_RUNNER_TOKEN: ${{ secrets.GH_SELF_HOSTED_RUNNER_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUILD_INSTANCE_SSH_KEY: ${{ secrets.BUILD_INSTANCE_SSH_KEY }}
  GIT_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}
  # kludge until we move away from runners
  WAIT_FOR_RUNNERS: false

jobs:
  setup:
    uses: ./.github/workflows/setup-runner.yml
    with:
      username: ${{ github.event.pull_request.user.login || github.actor }}
      runner_type: builder-x86
    secrets: inherit

  changes:
    runs-on: ubuntu-20.04
    # Required permissions.
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      avm-transpiler: ${{ steps.filter.outputs.avm-transpiler }}
      build-images: ${{ steps.filter.outputs.build-images }}
      barretenberg: ${{ steps.filter.outputs.barretenberg }}
      barretenberg-cpp: ${{ steps.filter.outputs.barretenberg-cpp }}
      noir: ${{ steps.filter.outputs.noir }}
      noir-projects: ${{ steps.filter.outputs.noir-projects }}
      l1-contracts: ${{ steps.filter.outputs.l1-contracts }}
      non-docs: ${{ steps.filter.outputs.non-docs }}
      non-misc-ci: ${{ steps.filter.outputs.non-misc-ci }}
      non-barretenberg-cpp: ${{ steps.filter.outputs.non-barretenberg-cpp }}
    steps:
      - uses: actions/checkout@v4
        with: { ref: "${{ env.GIT_COMMIT }}" }
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: |
            barretenberg:
              - 'barretenberg/**'
            barretenberg-cpp:
              - 'barretenberg/cpp/**'
            build-images:
              - 'build-images/**'
            noir:
              - 'noir/**'
            avm-transpiler:
              - 'avm-transpiler/**'
            l1-contracts:
              - 'l1-contracts/**'
            noir-projects:
              - 'noir-projects/**'
            non-barretenberg-cpp:
              - '!(barretenberg/cpp/**)'
              # don't consider AVM stuff 'core bb'
              - barretenberg/cpp/pil/**
              - barretenberg/cpp/src/barretenberg/vm/**
              - barretenberg/cpp/src/barretenberg/**/generated/*
              - barretenberg/cpp/src/barretenberg/client_ivc.{hpp,cpp}
            non-docs:
              - '!(docs/**)'
            non-misc-ci:
              - '!(.github/**)'
              # Always rebuild when this file changes
              - .github/workflows/ci.yml

  build-images:
    needs: [setup, changes]
    # Note we don't but the 'if' here as that would also apply to dependent jobs, instead we just copy it into each step
    runs-on: ${{ github.event.pull_request.user.login || github.actor }}-x86
    steps:
      - uses: actions/checkout@v4
        if: ${{ needs.changes.outputs.build-images == 'true' }}
        with: { ref: "${{ env.GIT_COMMIT }}" }
      - uses: ./.github/ci-setup-action
        if: ${{ needs.changes.outputs.build-images == 'true' }}
        with:
          concurrency_key: build-images-x86
      - name: "Push Build Images If Changed"
        if: ${{ needs.changes.outputs.build-images == 'true' }}
        timeout-minutes: 40
        run: |
          earthly-ci --push ./build-images/+build

  build:
    needs: [build-images, changes]
    if: ${{ needs.changes.outputs.non-docs == 'true' && needs.changes.outputs.non-misc-ci == 'true' && needs.changes.outputs.non-barretenberg-cpp == 'true' }}
    runs-on: ${{ github.event.pull_request.user.login || github.actor }}-x86
    outputs:
      e2e_list: ${{ steps.e2e_list.outputs.list }}
      bench_list: ${{ steps.bench_list.outputs.list }}
    steps:
      - uses: actions/checkout@v4
        with: { ref: "${{ env.GIT_COMMIT }}" }
      - uses: ./.github/ci-setup-action
        with:
          concurrency_key: build-x86
      # prepare images locally, tagged by commit hash
      - name: "Build E2E Image"
        timeout-minutes: 40
        run: |
          earthly-ci --no-cache ./yarn-project+export-e2e-test-images
