#!/bin/bash
set -eu -o pipefail
[ "${BUILD_SYSTEM_DEBUG:-}" = 1 ] && set -x

if [ "$#" -lt 2 ]; then
  echo "Usage: $0 <key> <hash>" >&2
  exit 1
fi

if [ "${USE_CACHE:-0}" -lt 1 ]; then
  # Only download if USE_CACHE is 1
  echo "Not using cache for $1 because USE_CACHE=0."
  exit 1
fi

KEY="$1"
HASH="$2"
OUT_DIR="${3:-.}"

TAR_FILE="$KEY-$HASH.tar.gz"
CACHE_FILE="$OUT_DIR/$KEY.cache"

mkdir -p "$OUT_DIR"
# Extract endpoint URL if S3_BUILD_CACHE_AWS_PARAMS is set
if [[ -n "${S3_BUILD_CACHE_AWS_PARAMS:-}" ]]; then
  aws $S3_BUILD_CACHE_AWS_PARAMS s3 cp "s3://aztec-ci-artifacts/build-cache/$TAR_FILE" "-" | tar -xzf - -C "$OUT_DIR" 2>/dev/null
else
  # Do not go to S3 if we have already downloaded this same file
  if [[ -z "${SKIP_LOCAL_CACHE_FILE:-}" && -f "$CACHE_FILE" && "$(cat "$CACHE_FILE")" == $HASH ]]; then
    echo "File $TAR_FILE is already downloaded according to $CACHE_FILE" >&2 && exit 0
  fi
  # Default to AWS S3 URL if no custom endpoint is set
  S3_ENDPOINT="http://aztec-ci-artifacts.s3.amazonaws.com"
  # Attempt to download and extract the cache file
  (curl -s -f "$S3_ENDPOINT/build-cache/$TAR_FILE" | tar -xzf - -C "$OUT_DIR" 2>/dev/null) || (echo "Cache download of $TAR_FILE failed." >&2 && exit 1)
  # Record locally that we have downloaded this file
  echo $HASH > $CACHE_FILE
fi
echo "Cache download and extraction of $TAR_FILE complete." >&2