# Usage: source $(git rev-parse --show-toplevel)/ci3/source
# This is a basis for shell scripts that use the ci3 framework.

# Conditionally print all statements ran in CI scripts.
# Useful for debugging commands that weren't expected to error out.
[ -n "${BUILD_SYSTEM_DEBUG:-}" ] && set -x || true

# Set best practices for early error exit and undefined variables.
set -euo pipefail
# Enable extended bash globs.
shopt -s extglob
shopt -s globstar

# Enter our script directory, allowing usage of scripts from any directory.
[ -z "${NO_CD:-}" ] && cd "$(dirname $0)"

# We export so we can use from exported functions.
export root="$(git rev-parse --show-toplevel)"
export ci3="$root/ci3"
[[ "$PATH" != *"$ci3:" ]] && export PATH=$ci3:$PATH

# Our redis cache for tracking e.g. test runs.
export ci_redis=${CI_REDIS:-"ci-redis.lzka0i.0001.use2.cache.amazonaws.com"}

function hash_str {
  set -eu
  echo $1 | git hash-object --stdin | cut -c1-16 | tr -d '\n'
}

function echo_stderr {
  echo $@ >&2
}

export -f hash_str echo_stderr

function get_num_cpus {
  if [ -f /sys/fs/cgroup/cpu.max ]; then
    read cpu_quota cpu_period < /sys/fs/cgroup/cpu.max
    if [[ "$cpu_quota" == "max" ]]; then
      nproc
    else
      echo $((cpu_quota / cpu_period))
    fi
  else
    nproc
  fi
}

function get_num_cpus_max {
  local jobs=$(get_num_cpus)
  [ -n "${1:-}" ] && [ "$1" -lt $jobs ] && jobs=$1
  echo $jobs
}

# For running test cmds that are pathed relative to the repo root.
# Commands are read from functions stdin.
function parallelise {
  cd $root
  local jobs=$(get_num_cpus_max ${1:-})
  echo "Starting test run with max $jobs jobs..."
  parallel -j$jobs --bar --timeout 600 --joblog joblog.txt --halt now,fail=1 'run_test_cmd {}'

  slow_jobs=$(cat joblog.txt | \
    awk 'NR>1 && $4 > 300 {print | "sort -k4,4"}' | \
    awk '{print $4 ": " substr($0, index($0, $9))}' | sed -E "s/^(.*: ).*'([^']+)'.*$/\1\2/")
  if [ -n "$slow_jobs" ]; then
    echo -e "${yellow}WARNING: The following tests exceed 5 minute runtimes. Break them up or rethink them.${reset}"
    echo "$slow_jobs"
  fi
}

source $ci3/source_color