#!/bin/bash
[ -n "${BUILD_SYSTEM_DEBUG:-}" ] && set -x
set -eu

if [ "$#" -lt 2 ]; then
  echo "Usage: $0 <key> <hash> <binary_paths_to_tar_gz_and_upload...>" >&2
  exit 1
fi

# Key and hash, intended to form the full tar file name
key="$1"
hash="$2"
name="$key-$hash.tar.gz"

# Now $@ = our binary path args
shift 2

if [ -z ${S3_FORCE_UPLOAD:-} ] && aws ${S3_BUILD_CACHE_AWS_PARAMS:-} s3 ls "s3://aztec-ci-artifacts/build-cache/$name" >/dev/null 2>&1; then
  echo "Skipping upload, already exists: $name" >&2
  exit 0
fi
# Pipe tar directly to AWS S3 cp
if tar -czf - "$@" | aws ${S3_BUILD_CACHE_AWS_PARAMS:-} s3 cp - "s3://aztec-ci-artifacts/build-cache/$name" >&2 ; then
  # Record locally that we have this file version, so we don't re-download
  if [ -n "${SKIP_LOCAL_CACHE_FILE:-}" ]; then
    echo "Cache upload of $name complete" >&2
  else
    echo "$hash" > "$key.cache"
    echo "Cache upload of $name complete and registered locally in $key.cache" >&2
  fi
  exit 0
else
  echo "Cache upload of $name failed." >&2
  exit 0
fi